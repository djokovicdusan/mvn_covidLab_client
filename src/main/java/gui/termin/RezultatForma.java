/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.termin;

import kontroler.Kontroler;
import domen.Laborant;
import domen.TerminTestiranja;
import domen.Rezultat;
import domen.Pacijent;
import domen.Test;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import model.ModelTabeleRezultat;
import session.Session;

/**
 *
 * @author DuleDjo
 */
public class RezultatForma extends javax.swing.JDialog {

    /**
     * Creates new form FrmGrades
     */
    public RezultatForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popuniKomboTermina();
//        filtrirajTermine();
        popuniKomboTestova();
        srediTabelu();
        // pazi na ovu liniju koda !!!
//        pnlResults.setVisible(false);
        btnResetFilter.setEnabled(false);
        
        setTitle("Uno≈°enje rezultata testiranja");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFilter = new javax.swing.JPanel();
        lblDatum = new javax.swing.JLabel();
        cbTermini = new javax.swing.JComboBox<>();
        lblDatum1 = new javax.swing.JLabel();
        txtPacijent = new javax.swing.JTextField();
        lblDatum2 = new javax.swing.JLabel();
        cbTestovi = new javax.swing.JComboBox<>();
        lblDatum3 = new javax.swing.JLabel();
        cbPozitivan = new javax.swing.JCheckBox();
        btnSacuvajRezultatNew = new javax.swing.JButton();
        btnFilterTermin = new javax.swing.JButton();
        btnResetFilter = new javax.swing.JButton();
        pnlResults = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRezultati = new javax.swing.JTable();
        btnSacuvajRezultate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlFilter.setBackground(new java.awt.Color(235, 234, 234));
        pnlFilter.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "  Filter pretrage:  ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 21))); // NOI18N

        lblDatum.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDatum.setText("Datum termina:");
        lblDatum.setToolTipText("");

        cbTermini.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTermini.setModel(new javax.swing.DefaultComboBoxModel<>(new Object[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTermini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTerminiActionPerformed(evt);
            }
        });

        lblDatum1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDatum1.setText("Pacijent:");
        lblDatum1.setToolTipText("");

        txtPacijent.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        txtPacijent.setToolTipText("");
        txtPacijent.setEnabled(false);

        lblDatum2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDatum2.setText("Test:");
        lblDatum2.setToolTipText("");

        cbTestovi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTestovi.setModel(new javax.swing.DefaultComboBoxModel<>(new Object[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDatum3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDatum3.setText("Rezultat testa:");
        lblDatum3.setToolTipText("");

        cbPozitivan.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        cbPozitivan.setText("pozitivan");

        btnSacuvajRezultatNew.setBackground(new java.awt.Color(204, 204, 204));
        btnSacuvajRezultatNew.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnSacuvajRezultatNew.setText("Dodaj rezultat");
        btnSacuvajRezultatNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajRezultatNewActionPerformed(evt);
            }
        });

        btnFilterTermin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFilterTermin.setText("Filtriraj");
        btnFilterTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterTerminActionPerformed(evt);
            }
        });

        btnResetFilter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetFilter.setText("Resetuj filter");
        btnResetFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterLayout.createSequentialGroup()
                        .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFilterLayout.createSequentialGroup()
                                .addComponent(lblDatum2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(pnlFilterLayout.createSequentialGroup()
                                .addComponent(lblDatum3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))
                        .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTestovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPozitivan, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)))
                    .addComponent(btnSacuvajRezultatNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlFilterLayout.createSequentialGroup()
                        .addComponent(lblDatum, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTermini, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnResetFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterLayout.createSequentialGroup()
                        .addComponent(lblDatum1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPacijent, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFilterLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFilterTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFilterTermin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTermini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetFilter))
                .addGap(25, 25, 25)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPacijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatum2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTestovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatum3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPozitivan))
                .addGap(41, 41, 41)
                .addComponent(btnSacuvajRezultatNew, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pnlResults.setBackground(new java.awt.Color(255, 255, 255));
        pnlResults.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rezultati za unos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 15))); // NOI18N

        tblRezultati.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblRezultati.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRezultati);

        btnSacuvajRezultate.setBackground(new java.awt.Color(204, 204, 204));
        btnSacuvajRezultate.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnSacuvajRezultate.setText("Saƒçuvaj sve rezultate");
        btnSacuvajRezultate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajRezultateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlResultsLayout = new javax.swing.GroupLayout(pnlResults);
        pnlResults.setLayout(pnlResultsLayout);
        pnlResultsLayout.setHorizontalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(btnSacuvajRezultate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlResultsLayout.setVerticalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvajRezultate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(pnlFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajRezultateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajRezultateActionPerformed
        
        ModelTabeleRezultat model = (ModelTabeleRezultat) tblRezultati.getModel();
        List<Rezultat> rezultati = model.dajSveRezultate();
        //System.out.println(grades.get(0).getExam()+" "+grades.get(0).getpacijent()+" "+grades.get(0).getGrade());

        try {
            
            System.out.println(rezultati.size() + " LISTA NOVI");
            System.out.println(rezultati.size() + " LISTA REZULTATI");
            Kontroler.getInstance().sacuvajSveVrednosti(rezultati);
            JOptionPane.showMessageDialog(this, "Rezultati testiranja su uspe≈°no uneti!");
            
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da zapamti podatke o rezultatima testiranja pacijenata! Vec ste uneli rezultate za ovaj termin!");
        }
        this.dispose();
        this.setVisible(false);

    }//GEN-LAST:event_btnSacuvajRezultateActionPerformed

    private void btnSacuvajRezultatNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajRezultatNewActionPerformed
        // TODO add your handling code here:
        try {
            TerminTestiranja termin = (TerminTestiranja) cbTermini.getSelectedItem();
            Test test = (Test) cbTestovi.getSelectedItem();
            if (termin != null && test != null) {
                boolean pozitivan = cbPozitivan.isSelected();
                Rezultat r = new Rezultat(test, termin, pozitivan);
                osveziTabelu(r);
//                cbTermini.removeItem(termin);

//                Kontroler.getInstance().sacuvajRezultat(r);
                int option = JOptionPane.showConfirmDialog(this, "Termin je uspe≈°no zakazan! Da li ≈æelite da zakazete jos neki termin?", "", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
//                    txtDatum.setText("");
                } else {
                    btnSacuvajRezultatNew.setEnabled(false);
//                    this.dispose();
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "Morate izabrati termin i test za koji unosite rezultate!");
            }
            
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da zapamti podatke o rezultatima testiranja pacijenata!");
            
        }

    }//GEN-LAST:event_btnSacuvajRezultatNewActionPerformed

    private void cbTerminiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTerminiActionPerformed
        // TODO add your handling code here:
        TerminTestiranja t = (TerminTestiranja) cbTermini.getSelectedItem();
        if (t != null) {
            txtPacijent.setText(t.getPacijent().toString());
        }
        

    }//GEN-LAST:event_cbTerminiActionPerformed

    private void btnResetFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFilterActionPerformed
        // TODO add your handling code here:
        popuniKomboTermina();
        
    }//GEN-LAST:event_btnResetFilterActionPerformed

    private void btnFilterTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterTerminActionPerformed
        // TODO add your handling code here:
        filtrirajTermine();
        btnResetFilter.setEnabled(true);
    }//GEN-LAST:event_btnFilterTerminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilterTermin;
    private javax.swing.JButton btnResetFilter;
    private javax.swing.JButton btnSacuvajRezultatNew;
    private javax.swing.JButton btnSacuvajRezultate;
    private javax.swing.JCheckBox cbPozitivan;
    private javax.swing.JComboBox<Object> cbTermini;
    private javax.swing.JComboBox<Object> cbTestovi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblDatum1;
    private javax.swing.JLabel lblDatum2;
    private javax.swing.JLabel lblDatum3;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlResults;
    private javax.swing.JTable tblRezultati;
    private javax.swing.JTextField txtPacijent;
    // End of variables declaration//GEN-END:variables

    private void spremiTabelu(List<Rezultat> rezultati) {
        TableModel model = new ModelTabeleRezultat(rezultati);
        tblRezultati.setModel(model);

        //tblpacijent.getColumnModel().removeColumn(tblpacijent.getColumnModel().getColumn(1));
    }
    
    private void popuniKomboTestova() {
        cbTestovi.removeAllItems();
        try {
            List<Test> list = Kontroler.getInstance().dajSveTestove();
            for (Test t : list) {
                cbTestovi.addItem(t);
            }
        } catch (Exception ex) {
            Logger.getLogger(TerminForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void srediTabelu() {
        ModelTabeleRezultat modelTabeleRezultat = new ModelTabeleRezultat(new ArrayList<Rezultat>());
        tblRezultati.setModel(modelTabeleRezultat);
    }
    
    private void osveziTabelu(Rezultat r) {
        ModelTabeleRezultat modelTabeleRezultat = (ModelTabeleRezultat) tblRezultati.getModel();
        modelTabeleRezultat.addRezultat(r);
        
    }
    
    private void popuniKomboTermina() {
        cbTermini.removeAllItems();
        try {
            List<TerminTestiranja> list = Kontroler.getInstance().dajSveTermineTestiranja();
            for (TerminTestiranja t : list) {
                cbTermini.addItem(t);
            }
        } catch (Exception ex) {
            Logger.getLogger(TerminForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void filtrirajTermine() {
        // vrati samo slobodne termine
        cbTermini.removeAllItems();
        boolean signalIsEmpty = true;
        try {
            List<TerminTestiranja> listTermin = Kontroler.getInstance().dajSveTermineTestiranja();
            List<Rezultat> listResult = Kontroler.getInstance().dajSveRezultate();
            List<TerminTestiranja> listaTerminPostojiRezultat = new ArrayList<>();
            
            for (Rezultat rezultat : listResult) {
                if (listTermin.contains(rezultat.getTerminTestiranja())) {
                    listaTerminPostojiRezultat.add(rezultat.getTerminTestiranja());
                }
            }
            for (TerminTestiranja t : listTermin) {
                if (!listaTerminPostojiRezultat.contains(t)) {
                    signalIsEmpty = false;
                    cbTermini.addItem(t);
                }
               
            }
            if(signalIsEmpty){
                JOptionPane.showMessageDialog(this, "Ne postoje termini za koje nije unet bar jedan rezultat. Resetujte pretragu.");
            }
        } catch (Exception ex) {
            Logger.getLogger(TerminForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
